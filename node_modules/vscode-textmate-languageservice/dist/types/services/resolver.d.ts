import * as vscode from 'vscode';
import * as vscodeTextmate from 'vscode-textmate';
import type { GrammarLanguageDefinition, LanguageDefinition } from '../util/contributes';
export declare class ResolverService implements vscodeTextmate.RegistryOptions {
    onigLib: Promise<vscodeTextmate.IOnigLib>;
    private _contributes;
    constructor(onigLib: Promise<vscodeTextmate.IOnigLib>, context?: vscode.ExtensionContext);
    loadGrammar(scopeName: string): Promise<vscodeTextmate.IRawGrammar | null>;
    findLanguageByExtension(fileExtension: string): string;
    findLanguageByFilename(fileName: string): string;
    findGrammarScopeNameFromFilename(fileName: string): string | null;
    findLanguageIdFromScopeName(scopeName: string): string;
    getLanguageDefinitionFromId(languageId: string): LanguageDefinition;
    getLanguageDefinitionFromFilename(fileName: string): LanguageDefinition;
    getGrammarDefinitionFromLanguageId(languageId: string): GrammarLanguageDefinition;
    getExtensionFromLanguageId(languageId: string): vscode.Extension<unknown> | undefined;
    getExtensionFromScopeName(scopeName: string): vscode.Extension<unknown>;
    loadGrammarByLanguageId(languageId: string): Promise<vscodeTextmate.IRawGrammar | null>;
}
