import * as vscode from 'vscode';
import { ServiceBase } from '../util/service';
import type { ConfigData } from '../config';
import type { LiteTextDocument } from './document';
import type { TokenizerService } from './tokenizer';
export interface OutlineEntry {
    readonly level: number;
    readonly line: number;
    readonly location: vscode.Location;
    readonly text: string;
    readonly token: string;
    readonly type: vscode.SymbolKind;
    readonly anchor: number;
}
export declare class OutlineService extends ServiceBase<OutlineEntry[]> {
    private _config;
    private _tokenService;
    constructor(_config: ConfigData, _tokenService: TokenizerService);
    lookup(document: LiteTextDocument, text: string): Promise<OutlineEntry | void>;
    parse(document: LiteTextDocument): Promise<OutlineEntry[]>;
    private isSymbolToken;
}
