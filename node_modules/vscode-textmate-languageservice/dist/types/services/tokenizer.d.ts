import * as vscodeTextmate from 'vscode-textmate';
import { ServiceBase } from '../util/service';
import type { Mutable } from 'type-fest';
import type { LiteTextDocument } from './document';
import type { ConfigData } from '../config';
export interface TextmateToken extends Mutable<vscodeTextmate.IToken> {
    level: number;
    line: number;
    text: string;
    type: string;
}
export interface TextmateTokenizeLineResult extends Omit<vscodeTextmate.ITokenizeLineResult, 'tokens'> {
    readonly tokens: TextmateToken[];
}
export declare class TokenizerService extends ServiceBase<TextmateToken[]> {
    private _config;
    private _grammar;
    private _states;
    constructor(_config: ConfigData, _grammar: vscodeTextmate.IGrammar);
    parse(document: LiteTextDocument): Promise<TextmateToken[]>;
}
